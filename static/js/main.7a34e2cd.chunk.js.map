{"version":3,"sources":["ErrorBund.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","props","_this","Object","classCallCheck","this","_super","call","state","hasError","error","errorInfo","react_default","a","createElement","children","React","Component","Button","_useState","useState","_useState2","slicedToArray","counter","setCounter","Error","onClick","label","defaultProps","App","setUsers","useEffect","fetch","then","response","json","data","results","catch","console","log","className","ErrorBund_ErrorBoundary","components_Button","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"irBAEqBA,0CACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CAAEC,UAAU,GAFRP,uDAYnB,SAAkBQ,EAAOC,0BAKzB,WACE,OAAIN,KAAKG,MAAMC,SAENG,EAAAC,EAAAC,cAAA,mCAGFT,KAAKJ,MAAMc,mDAlBpB,SAAgCL,GAE9B,MAAO,CAAED,UAAU,UARkBO,IAAMC,WCahCC,MAZjB,SAAgBjB,GAAM,IAAAkB,EACWC,mBAAS,GADpBC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GACXI,EADWF,EAAA,GACFG,EADEH,EAAA,GAKlB,GAAa,IAAVE,EACD,MAAM,IAAIE,MAAM,oBAElB,OAAQb,EAAAC,EAAAC,cAAA,UAAQY,QANhB,WACEF,EAAWD,EAAQ,KAMRtB,EAAM0B,MADX,IACmBJ,ICiC/BL,EAAOU,aAAa,CAClBD,MAAO,MAIME,MA9Bf,WAAe,IAAAV,EACaC,mBAAS,IADtBC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GACCW,GADDT,EAAA,GAAAA,EAAA,IAUb,OAPAU,oBAAU,WACRC,MAAM,yCACLC,KAAK,SAAAC,GAAQ,OAAEA,EAASC,SACxBF,KAAK,SAAAG,GAAI,OAAEN,EAASM,EAAKC,WACzBC,MAAM,SAAA5B,GAAK,OAAE6B,QAAQC,IAAI9B,MAC1B,IAGAE,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACf7B,EAAAC,EAAAC,cAAC4B,EAAD,KACA9B,EAAAC,EAAAC,cAAC6B,EAAD,SCrBWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAf,KAAAc,EAAAE,KAAA,UAAqBhB,KAAK,SAAAiB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMgD,WAAP,KACEjD,EAAAC,EAAAC,cAACgD,EAAD,QAOJlB","file":"static/js/main.7a34e2cd.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n      //true: nowa strona i render h1\n      //false : alert w consoli\n    }\n  \n    componentDidCatch(error, errorInfo) {\n      // You can also log the error to an error reporting service\n      //logErrorToMyService(error, errorInfo);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h1>Something went wrong.</h1>;\n      }\n  \n      return this.props.children; \n    }\n  }","import React, { useState} from 'react';\n\n\nfunction Button(props){\n    const [counter, setCounter]= useState(0);\n    function handleClick(){\n      setCounter(counter+1);\n    }\n    if(counter===5){\n      throw new Error('za duza ilosc...');\n    }\n    return  <button onClick={handleClick}>\n                {props.label} {counter}\n            </button>\n  }\n  export default Button;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types'\nimport ErrorBund from \"./ErrorBund\";\n//import renderer from 'react-test-renderer';\nimport Button from \"./components/Button\";\n\nfunction User({firstName,lastName,email  }){\n  return(\n    <div>\n      <h2>{firstName} {lastName}</h2>\n      <p>{email}</p>\n    </div>\n    )\n}\nUser.propTypes = {\n  firstName : PropTypes.string.isRequired,\n  lastName : PropTypes.string.isRequired,\n  email: PropTypes.string\n}\nfunction App() {\n  const [users, setUsers] = useState([]);\n  \n  useEffect(()=>{\n    fetch('https://randomuser.me/api/?results=10')\n    .then(response=>response.json())\n    .then(data=>setUsers(data.results))\n    .catch(error=>console.log(error));\n  },[])\n  \n  return (\n    <div className=\"App\">\n    <ErrorBund>\n    <Button />\n     { /* {users && users.map((user)=> \n        <User key={user.login.uuid}\n          firstName={user.name.first}\n          lastName={user.name.last}\n          email={user.email}\n        />)} */}\n      \n    </ErrorBund>\n    </div>\n  );\n}\nButton.defaultProps={\n  label: 'OK'\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}